{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_form, {\n    ref: \"ruleFormRef\",\n    model: $data.ruleForm,\n    \"status-icon\": \"\",\n    rules: $data.rules,\n    \"label-width\": \"120px\",\n    class: \"demo-ruleForm\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"手机号\",\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.username = $event),\n        type: \"text\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"验证码\",\n      prop: \"yzm\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.yzm,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.yzm = $event),\n        type: \"password\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"确认手机号\",\n      prop: \"confirmYzm\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.confirmYzm,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.confirmYzm = $event),\n        type: \"password\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: _ctx.handleT\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"提交\")]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"mappings":";;;;;;uBACEA,oBAsBM,cArBJC,aAoBYC;IAnBVC,GAAG,EAAC,aAAa;IAChBC,KAAK,EAAEC,cAAQ;IAChB,aAAW,EAAX,EAAW;IACVC,KAAK,EAAED,WAAK;IACb,aAAW,EAAC,OAAO;IACnBE,KAAK,EAAC;;sBACD,MAEe,CAFfN,aAEeO;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;wBAC9B,MAAuE,CAAvET,aAAuEU;oBAApDN,cAAQ,CAACO,QAAQ;mEAAjBP,cAAQ,CAACO,QAAQ;QAAEC,IAAI,EAAC,MAAM;QAACC,YAAY,EAAC;;;QAEhEb,aAEeO;MAFDC,KAAK,EAAC,KAAK;MAACC,IAAI,EAAC;;wBAC9B,MAAsE,CAAtET,aAAsEU;oBAAnDN,cAAQ,CAACU,GAAG;mEAAZV,cAAQ,CAACU,GAAG;QAAEF,IAAI,EAAC,UAAU;QAACC,YAAY,EAAC;;;QAE/Db,aAEeO;MAFDC,KAAK,EAAC,OAAO;MAACC,IAAI,EAAC;;wBAChC,MAA6E,CAA7ET,aAA6EU;oBAA1DN,cAAQ,CAACW,UAAU;mEAAnBX,cAAQ,CAACW,UAAU;QAAEH,IAAI,EAAC,UAAU;QAACC,YAAY,EAAC;;;QAEtEb,aAEeO;wBADd,MAAyD,CAAzDP,aAAyDgB;QAA9CJ,IAAI,EAAC,SAAS;QAAEK,OAAK,EAAEC;;0BAAS,MAAE,kBAAF,IAAE","names":["_createElementBlock","_createVNode","_component_el_form","ref","model","$data","rules","class","_component_el_form_item","label","prop","_component_el_input","username","type","autocomplete","yzm","confirmYzm","_component_el_button","onClick","_ctx"],"sourceRoot":"","sources":["D:\\fast\\ke\\lianxi\\my-project666\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\n  <div>\n    <el-form\n      ref=\"ruleFormRef\"\n      :model=\"ruleForm\"\n      status-icon\n      :rules=\"rules\"\n      label-width=\"120px\"\n      class=\"demo-ruleForm\">\n           <el-form-item label=\"手机号\" prop=\"username\">\n            <el-input v-model=\"ruleForm.username\" type=\"text\" autocomplete=\"off\" />\n           </el-form-item>\n           <el-form-item label=\"验证码\" prop=\"yzm\">\n            <el-input v-model=\"ruleForm.yzm\" type=\"password\" autocomplete=\"off\" />\n           </el-form-item>\n           <el-form-item label=\"确认手机号\" prop=\"confirmYzm\">\n            <el-input v-model=\"ruleForm.confirmYzm\" type=\"password\" autocomplete=\"off\" />\n           </el-form-item>\n           <el-form-item>\n            <el-button type='primary' @click=\"handleT\">提交</el-button>\n           </el-form-item>\n           \n      </el-form>\n  </div>\n</template>\n\n<script >\n  export default{\n    name:\"RegisterView\",\n    data(){\n      return{\n        //收集表单数据\n        ruleForm:{\n          username:'',\n          yzm:'',\n          confirmYzm:\"\"\n        },\n        rules:[]\n      }\n    }\n  }\n\n</script>\n\n<style lang=\"scss\" scoped>\n.el-form{width: 400px;margin: 20px auto;}\n.el-button{margin: 0 auto;}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}